@model PetaFF.Models.PetAd
@using PetaFF.Extensions
@{
    ViewData["Title"] = "Детали объявления (пример)";
}

<div class="container mt-4">
    <div class="card">
        <div class="card-body">
            <h2 class="card-title">@Model.Name</h2>
            <div class="d-flex justify-content-between align-items-center mb-3">
                <span class="badge bg-primary">@Model.Type</span>
                <span class="badge bg-info">@Model.Status.GetDisplayName()</span>
            </div>

            @if (!string.IsNullOrEmpty(Model.PhotoPath))
            {
                <img src="@Model.PhotoPath" class="img-fluid rounded mb-3" alt="Фото животного" style="max-height: 400px;">
            }

            <div class="mb-3">
                <h5>Описание:</h5>
                <p>@Model.Description</p>
            </div>

            <div class="mb-3">
                <h5>Адрес пользователя:</h5>
                <p>@Model.Address</p>
            </div>

            <div class="mb-3">
                <h5>Район:</h5>
                <p>@Model.District</p>
            </div>

            <div class="mb-3">
                <h5>Контактный телефон:</h5>
                <p>@Model.ContactPhone</p>
            </div>

            <div class="mb-3">
                <h5>Дата пропажи:</h5>
                <p>@Model.DateLost?.ToString("dd.MM.yyyy")</p>
            </div>

            <div class="mb-3">
                <h5>Автор объявления:</h5>
                <p>@Model.User?.Username</p>
            </div>

            <div class="d-flex align-items-center mb-3">
                <button id="likeBtn" class="btn btn-outline-danger me-2"><i class="bi bi-heart"></i> <span id="likeCount">0</span></button>
                <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#chatModal"><i class="bi bi-chat-dots"></i> Связаться с автором</button>
                <a href="@Url.Action("PrintFake", "PetAd", new { name = Model.Name })" target="_blank" class="btn btn-outline-secondary ms-2">
                    <i class="fas fa-print"></i> Распечатать объявление
                </a>
            </div>

            <div class="comments-section mt-4">
                <h4>Комментарии (<span id="commentsCount">0</span>)</h4>
                <form id="commentForm" class="mb-3">
                    <div class="form-group mb-2">
                        <textarea id="commentText" class="form-control" rows="2" placeholder="Напишите комментарий..."></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Оставить комментарий</button>
                </form>
                <div id="commentsList"></div>
            </div>

            <a asp-action="OtherAds" class="btn btn-secondary mt-4">Назад к списку</a>
        </div>
    </div>
</div>

<!-- Модальное окно чата -->
<div class="modal fade" id="chatModal" tabindex="-1" aria-labelledby="chatModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="chatModalLabel">Чат с автором объявления</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div id="chatMessages" style="max-height:200px; overflow-y:auto; margin-bottom:10px;"></div>
        <form id="chatForm">
          <div class="input-group">
            <input type="text" id="chatInput" class="form-control" placeholder="Введите сообщение...">
            <button class="btn btn-primary" type="submit">Отправить</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

@section Scripts {
    <script>
        // --- Лайки ---
        const fakeAdKey = 'fakeAd_' + @Model.Name.GetHashCode();
        function getLikeCount() {
            return parseInt(localStorage.getItem(fakeAdKey + '_likes') || '0');
        }
        function setLikeCount(val) {
            localStorage.setItem(fakeAdKey + '_likes', val);
            $('#likeCount').text(val);
        }
        function getLiked() {
            return localStorage.getItem(fakeAdKey + '_liked') === '1';
        }
        function setLiked(val) {
            localStorage.setItem(fakeAdKey + '_liked', val ? '1' : '0');
            if (val) {
                $('#likeBtn').addClass('btn-danger').removeClass('btn-outline-danger');
            } else {
                $('#likeBtn').removeClass('btn-danger').addClass('btn-outline-danger');
            }
        }
        $('#likeBtn').on('click', function() {
            let liked = getLiked();
            let count = getLikeCount();
            if (liked) {
                count = Math.max(0, count - 1);
                setLiked(false);
            } else {
                count++;
                setLiked(true);
            }
            setLikeCount(count);
        });
        setLikeCount(getLikeCount());
        setLiked(getLiked());

        // --- Комментарии ---
        function getComments() {
            return JSON.parse(localStorage.getItem(fakeAdKey + '_comments') || '[]');
        }
        function setComments(comments) {
            localStorage.setItem(fakeAdKey + '_comments', JSON.stringify(comments));
            $('#commentsCount').text(comments.length);
            const list = $('#commentsList');
            list.empty();
            comments.slice().reverse().forEach(function(c, idx) {
                list.append(`<div class=\"card mb-2\"><div class=\"card-body d-flex justify-content-between align-items-center\"><div><p class=\"mb-1\">${c.text}</p><small class=\"text-muted\">${c.date}</small></div><button class=\"btn btn-sm btn-link text-danger delete-comment\" data-idx=\"${comments.length-1-idx}\" title=\"Удалить\"><i class=\"bi bi-trash\"></i></button></div></div>`);
            });
        }
        setComments(getComments());
        $('#commentForm').on('submit', function(e) {
            e.preventDefault();
            const text = $('#commentText').val().trim();
            if (!text) return;
            const comments = getComments();
            comments.push({ text, date: new Date().toLocaleString() });
            setComments(comments);
            $('#commentText').val('');
        });
        $('#commentsList').on('click', '.delete-comment', function() {
            const idx = $(this).data('idx');
            let comments = getComments();
            comments.splice(idx, 1);
            setComments(comments);
        });

        // --- Чат ---
        function getChat() {
            return JSON.parse(localStorage.getItem(fakeAdKey + '_chat') || '[]');
        }
        function setChat(chat) {
            localStorage.setItem(fakeAdKey + '_chat', JSON.stringify(chat));
            const chatBox = $('#chatMessages');
            chatBox.empty();
            chat.forEach(function(msg, idx) {
                chatBox.append(`<div class=\"d-flex justify-content-between align-items-center mb-1\"><span><b>Вы:</b> ${msg.text} <span class=\"text-muted\" style=\"font-size:0.9em;\">${msg.date}</span></span><button class=\"btn btn-sm btn-link text-danger delete-chat-msg\" data-idx=\"${idx}\" title=\"Удалить\"><i class=\"bi bi-trash\"></i></button></div>`);
            });
            chatBox.scrollTop(chatBox[0].scrollHeight);
        }
        setChat(getChat());
        $('#chatForm').on('submit', function(e) {
            e.preventDefault();
            const text = $('#chatInput').val().trim();
            if (!text) return;
            const chat = getChat();
            chat.push({ text, date: new Date().toLocaleString() });
            setChat(chat);
            $('#chatInput').val('');
        });
        $('#chatMessages').on('click', '.delete-chat-msg', function() {
            const idx = $(this).data('idx');
            let chat = getChat();
            chat.splice(idx, 1);
            setChat(chat);
        });
    </script>
} 